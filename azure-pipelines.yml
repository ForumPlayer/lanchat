trigger:
  - master

pool:
  vmImage: 'windows-latest'

stages:
  - stage: Test
    jobs:
      - job: Test
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: 'build'
              projects: '**/*.csproj'
          - task: DotNetCoreCLI@2
            inputs:
              command: 'test'
              projects: '**/*Tests.csproj'
  - stage: Publish
    jobs:
    - job: Core
      steps:
        - task: DotNetCoreCLI@2
          inputs:
            command: 'pack'
            packagesToPack: 'Lanchat.Core/Lanchat.Core.csproj'
            packDirectory: '$(Build.ArtifactStagingDirectory)/Core'
            versioningScheme: 'off'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/Core'
            ArtifactName: 'Core'
            publishLocation: 'Container'

    - job: Terminal
      steps:
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: 'Lanchat.Terminal/Lanchat.Terminal.csproj'
          modifyOutputPath: false
          arguments: '-c Release -p:PublishSingleFile=true --self-contained true -r win-x86 -o $(Build.ArtifactStagingDirectory)/Terminal/win-x86'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: 'Lanchat.Terminal/Lanchat.Terminal.csproj'
          modifyOutputPath: false
          arguments: '-c Release -p:PublishSingleFile=true --self-contained true -r win-x64 -o $(Build.ArtifactStagingDirectory)/Terminal/win-x64'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/Terminal'
          ArtifactName: 'Terminal'
          publishLocation: 'Container'